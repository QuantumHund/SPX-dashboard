import streamlit as st
import yfinance as yf
import pandas as pd
import numpy as np
from ta.momentum import RSIIndicator, StochasticOscillator
from ta.trend import MACD
from ta.volatility import BollingerBands
from ta.volume import OnBalanceVolume

st.set_page_config(layout="wide")
st.title("üìä SPX Multi-Indicator Market Score Dashboard")

@st.cache_data(ttl=300)
def fetch_data(ticker):
    df = yf.download(ticker, period="6mo", interval="1d", progress=False)
    return df

spx = fetch_data("^GSPC")
vix = fetch_data("^VIX")

# Ellen≈ërz√©s: megvannak-e az alap adatok
if spx.empty or vix.empty:
    st.error("‚ùå Nem siker√ºlt let√∂lteni az SPX vagy VIX adatokat.")
    st.stop()

# V√°laszd ki az √°rfolyam oszlopot
price_col = "Adj Close" if "Adj Close" in spx.columns else "Close"
if price_col not in spx.columns:
    st.error(f"Nem tal√°lhat√≥ '{price_col}' oszlop az SPX adatok k√∂z√∂tt.")
    st.stop()

# Alap mutat√≥k sz√°m√≠t√°sa SPX-re
spx['Drawdown'] = (spx[price_col] / spx[price_col].cummax()) - 1

spx['RSI'] = RSIIndicator(close=spx[price_col], window=14).rsi()

macd = MACD(close=spx[price_col])
spx['MACD'] = macd.macd()
spx['MACD_Signal'] = macd.macd_signal()

bb = BollingerBands(close=spx[price_col])
spx['BB_High'] = bb.bollinger_hband()
spx['BB_Low'] = bb.bollinger_lband()

stoch = StochasticOscillator(high=spx['High'], low=spx['Low'], close=spx[price_col])
spx['Stoch'] = stoch.stoch()

spx['OBV'] = OnBalanceVolume(close=spx[price_col], volume=spx['Volume']).on_balance_volume()

# VIX indik√°tor (egyszer≈± jelz√©s: VIX > 25 √©s cs√∂kken≈ë)
vix['VIX_Falling'] = vix['Close'].diff() < 0

# Score sz√°m√≠t√°sa (max 6 pont)
spx['Score'] = 0

# 1 pont: Drawdown nagyobb mint -10%
spx.loc[spx['Drawdown'] < -0.10, 'Score'] += 1

# 1 pont: RSI oversold (RSI < 30)
spx.loc[spx['RSI'] < 30, 'Score'] += 1

# 1 pont: VIX > 25 √©s cs√∂kken≈ë
if not vix.empty:
    vix_latest = vix.iloc[-1]
    if vix_latest['Close'] > 25 and vix_latest['VIX_Falling']:
        spx['Score'] += 1  # VIX indik√°tor pontot az eg√©sz id≈ëszakra adom, lehet finom√≠tani

# 1 pont: MACD bullish crossover (MACD vonal a jelz≈ëvonal felett)
spx.loc[spx['MACD'] > spx['MACD_Signal'], 'Score'] += 1

# 1 pont: Stochastic oversold jelz√©s (Stoch < 20)
spx.loc[spx['Stoch'] < 20, 'Score'] += 1

# 1 pont: √Årfolyam a Bollinger als√≥ szalag k√∂zel√©ben
spx.loc[spx[price_col] < spx['BB_Low'], 'Score'] += 1

# V√©gs≈ë √©rt√©kel√©s max 6 pont

# Grafikonok megjelen√≠t√©se
st.subheader("üìâ SPX Price Chart")
st.line_chart(spx[price_col])

st.subheader("üìà RSI")
st.line_chart(spx['RSI'])

st.subheader("üìà MACD √©s Signal Line")
st.line_chart(spx[['MACD', 'MACD_Signal']])

st.subheader("üìà Stochastic Oscillator")
st.line_chart(spx['Stoch'])

st.subheader("üìâ Drawdown")
st.area_chart(spx['Drawdown'])

st.subheader("üìà Bollinger Bands")
st.line_chart(pd.DataFrame({
    'Price': spx[price_col],
    'BB High': spx['BB_High'],
    'BB Low': spx['BB_Low']
}))

st.subheader("üìä Market Score (0-6)")
st.line_chart(spx['Score'])

st.subheader("üìä Raw Data Table (last 30 rows)")
st.dataframe(spx.tail(30))
